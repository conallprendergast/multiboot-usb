# GLEE USB GRUB2 Configuration
insmod lvm
insmod part_gpt
insmod ext2
insmod regexp

#Current ISOS
#kali-linux-2018.2-amd64.iso
#ubuntu-18.04-desktop-amd64.iso
#archlinux-2019.01.01-x86_64.iso
#CentOS-7-live-GNOME-x86_64.iso
#CentOS-7-x86_64-LiveGNOME-1810.iso
#CentOS-6.10-x86_64-LiveDVD.iso
#CentOS-7-x86_64-Minimal-1810.iso
#rhel-server-7.6-x86_64-dvd.iso
#rhel-server-7.2-x86_64-dvd.iso
#clonezilla-live-2.5.5-38-amd64.iso

# Required with MBR for GUI
if [ "${grub_platform}" = "pc" ]; then
insmod vbe
fi

# Required with EFI for GUI and to prevent "No video mode set" error
if [ "${grub_platform}" = "efi" ]; then
insmod efi_gop
fi

# Keep the same graphic mode for kernel booting (passed as vga=)
# other values are "text" or any gfxmode value
set gfxpayload=keep

# Enable GUI
terminal_output gfxterm

#EFI: special characters (lines composing menu frame)
#replaced by '?' in text _fallback_ text mode if absent
# (useless if gfxterm is not enabled or if GUI theme loading success)
#loadfont ascii

insmod png
set theme=${prefix}/themes/invader/theme.txt

set isopath=/boot/isos

probe --set rootuuid --fs-uuid $root

# Required to have these available in other configfile files
export theme
export isopath
export root
export rootuuid

# Menu!
if [ -e ${isopath}/antergos ]; then
menuentry "Antergos >" --class antergos {
  configfile "${prefix}/inc-antergos.cfg"
}
fi
if [ -e ${isopath}/antix ]; then
menuentry "antiX >" --class antix {
  configfile "${prefix}/inc-antix.cfg"
}
fi
if [ -e ${isopath}/arch ]; then
menuentry "Arch Linux >" --class arch {
  configfile "${prefix}/inc-arch.cfg"
}
fi
if [ -e ${isopath}/bodhi ]; then
menuentry "Bodhi Linux >" --class bodhi {
  configfile "${prefix}/inc-bodhi.cfg"
}
fi
if [ -e ${isopath}/centos ]; then
menuentry "CentOS >" --class centos {
  configfile "${prefix}/inc-centos.cfg"
}
fi
if [ -e ${isopath}/clonezilla ]; then
menuentry "Clonezilla >" --class clonezilla {
  configfile "${prefix}/inc-clonezilla.cfg"
}
fi
if [ -e ${isopath}/debian ]; then
menuentry "Debian >" --class debian {
  configfile "${prefix}/inc-debian.cfg"
}
fi
if [ -e ${isopath}/doudoulinux ]; then
menuentry "DoudouLinux>" --class doudoulinux {
  configfile "${prefix}/inc-doudoulinux.cfg"
}
fi
if [ -e ${isopath}/elementary ]; then
menuentry "elementary OS >" --class elementary {
  configfile "${prefix}/inc-elementary.cfg"
}
fi
if [ -e ${isopath}/fedora ]; then
menuentry "Fedora >" --class fedora {
  configfile "${prefix}/inc-fedora.cfg"
}
fi
if [ -e ${isopath}/gparted ]; then
menuentry "GParted >" --class gparted {
  configfile "${prefix}/inc-gparted.cfg"
}
fi
if [ -e ${isopath}/grml ]; then
menuentry "Grml >" --class grml {
  configfile "${prefix}/inc-grml.cfg"
}
fi
if [ -e ${isopath}/ipxe ]; then
menuentry "iPXE >" --class net {
  configfile "${prefix}/inc-ipxe.cfg"
}
fi
if [ -e ${isopath}/kali ]; then
menuentry "Kali >" --class kali {
  configfile "${prefix}/inc-kali.cfg"
}
fi
if [ -e ${isopath}/linuxmint ]; then
menuentry "Linux Mint >" --class linuxmint {
  configfile "${prefix}/inc-linuxmint.cfg"
}
fi
if [ -e ${isopath}/netrunner ]; then
menuentry "Netrunner >" --class netrunner {
  configfile "${prefix}/inc-netrunner.cfg"
}
fi
if [ -e ${isopath}/porteus ]; then
menuentry "Porteus >" --class porteus {
  configfile "${prefix}/inc-porteus.cfg"
}
fi
if [ -e ${isopath}/rhel ]; then
menuentry "Red Hat Enterprise Linux >" --class redhat {
  configfile "${prefix}/inc-rhel.cfg"
}
fi
if [ -e ${isopath}/sabayon ]; then
menuentry "Sabayon >" --class sabayon {
  configfile "${prefix}/inc-sabayon.cfg"
}
fi
if [ -e ${isopath}/sysrescd ]; then
menuentry "System RescueCD >" --class gentoo {
  configfile "${prefix}/inc-sysrescd.cfg"
}
fi
if [ -e ${isopath}/tails ]; then
menuentry "Tails >" --class tails {
  configfile "${prefix}/inc-tails.cfg"
}
fi
if [ -e ${isopath}/ubuntu ]; then
menuentry "Ubuntu >" --class ubuntu {
  configfile "${prefix}/inc-ubuntu.cfg"
}
fi
if [ -e ${isopath}/xubuntu ]; then
menuentry "Xubuntu >" --class xubuntu {
  configfile "${prefix}/inc-xubuntu.cfg"
}
fi
if [ -e /KERNEL ]; then
menuentry "OpenELEC >" --class openelec {
  configfile "${prefix}/inc-openelec.cfg"
}
fi
menuentry ' ' { # Empty line
  true
}
menuentry "Shutdown" --class shutdown {
  halt
}
menuentry "Reboot" --class shutdown {
  reboot
}
